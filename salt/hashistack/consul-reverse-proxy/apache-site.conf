<VirtualHost *:80>
	RewriteEngine On
	RewriteCond %{HTTPS} off
	RewriteRule ^ https://%{HTTP_HOST}%{REQUEST_URI}
</VirtualHost>

<VirtualHost *:443>
	SSLEngine on
	Protocols h2 http/1.1

	#   A self-signed (snakeoil) certificate can be created by installing
	#   the ssl-cert package. See
	#   /usr/share/doc/apache2/README.Debian.gz for more info.
	#   If both key and certificate are stored in the same file, only the
	#   SSLCertificateFile directive is needed.
	SSLCertificateFile      /etc/ssl/private/system.crt
	SSLCertificateKeyFile /etc/ssl/private/system.key

	#   Server Certificate Chain:
	#   Point SSLCertificateChainFile at a file containing the
	#   concatenation of PEM encoded CA certificates which form the
	#   certificate chain for the server certificate. Alternatively
	#   the referenced file can be the same as SSLCertificateFile
	#   when the CA certificates are directly appended to the server
	#   certificate for convinience.
	SSLCertificateChainFile /etc/ssl/private/system.chain

	AllowEncodedSlashes NoDecode

	RewriteEngine On

	{{ range services -}}
	{{ range service .Name -}}
	{{ if index .ServiceMeta "apache_enable" -}}
	{{ $path := index .ServiceMeta "apache_path" }}
	Redirect permanent {{ $path }} {{ $path }}/
	<Location {{ $path }}/>
		{{ if index .ServiceMeta "apache_pretend_at_root" -}}
		ProxyPass http://{{.Address}}:{{.Port}}/
		ProxyPassReverse http://{{.Address}}:{{.Port}}/
		{{ else -}}
		ProxyPass http://{{.Address}}:{{.Port}}{{ $path }}/ nocanon
		ProxyPassReverse http://{{.Address}}:{{.Port}}{{ $path }}/
		{{ end }}
		RequestHeader set Origin https://{{.Address}}:{{.Port}}

		RewriteCond %{HTTP:UPGRADE} ^WebSocket$ [NC]
		RewriteCond %{HTTP:CONNECTION} Upgrade$ [NC]
		RewriteRule /(.*) ws:/$1 [P,NE]
	</Location>
	{{ end }}{{ end }}{{ end }}
</VirtualHost>
